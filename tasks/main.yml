
- name: Defining some env. variables (PSNODES)
  lineinfile: dest=/etc/environment line=PSNODES={{ num_ps_nodes }} create=yes

- name: Defining some env. variables (MNODES)
  lineinfile: dest=/etc/environment line=MNODES={{ num_master_nodes }} create=yes

- name: Defining some env. variables (WNODES)
  lineinfile: dest=/etc/environment line=WNODES={{ num_worker_nodes }} create=yes

- name: Install Jupyter Notebook,Matplotlib and boto3
  pip: 
   name: "{{ item }}" 
   executable: pip3 
  with_items:
    - jupyter
    - matplotlib
    - boto3

- name: Cloning repository with TF code 
  git: 
    repo: 'https://github.com/JJorgeDSIC/DistributedTensorFlowCodeForIM.git'
    dest: '{{ clone_path }}'
    clone: yes
  become: yes
  become_user: ubuntu  
####################################################
#  --------- Configuration ----------------------  #
####################################################
- name: Install Tensorflow
  pip:
    name: tensorflow
    executable: pip3 
  when: num_gpu == 0

####################################################
#  --------- Configuration ----------------------  #
####################################################
- name: Install Tensorflow (GPU)
  pip:
    name: tensorflow-gpu
    executable: pip3 
  when: num_gpu > 0

- name: Launch tensorboard
  command: ./launch_tensorboard.sh {{ model_path }}
  become: yes
  become_user: ubuntu
  when: launch_tensorboard
  args:
    chdir: '{{ clone_path }}/{{ work_dir }}'

- name: Training (PS)
  command: ./launch_training_dist.sh {{ num_gpu}} {{ data_path }} {{ model_path }} {{ train_steps }} ps {{ ps_nodes_list }} {{ master_node }} {{ worker_nodes_list }}
  become: yes
  become_user: ubuntu
  when: node_type == "ps" and launch_training
  args:
    chdir: '{{ clone_path }}/{{ work_dir }}'

- name: Training (MASTER)
  command: ./launch_training_dist.sh {{ num_gpu}} {{ data_path }} {{ model_path }} {{ train_steps }} master {{ ps_nodes_list }} {{ master_node }} {{ worker_nodes_list }}
  become: yes
  become_user: ubuntu
  when: node_type == "master" and launch_training
  args:
    chdir: '{{ clone_path }}/{{ work_dir }}'

- name: Training (WORKER)
  command: ./launch_training_dist.sh {{ num_gpu}} {{ data_path }} {{ model_path }} {{ train_steps }} worker {{ ps_nodes_list }} {{ master_node }} {{ worker_nodes_list }}
  become: yes
  become_user: ubuntu
  when: node_type == "worker" and launch_training
  args:
    chdir: '{{ clone_path }}/{{ work_dir }}'
